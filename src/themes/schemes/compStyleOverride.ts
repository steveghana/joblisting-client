import { alpha, createTheme, lighten, darken } from '@mui/material';
import { colors, themeOption } from './palette';
// import color from "../../assets/scss/_themes-vars.module.scss";
// import { themeColors } from "./PureLightTheme";
export const themeColors = {
  primary: '#5569ff',
  secondary: '#6E759F',
  success: '#57CA22',
  warning: '#FFA319',
  error: '#FF1943',
  info: '#33C2FF',
  black: '#223354',
  white: '#ffffff',
  primaryAlt: '#000C57',
};
export const styleOverrides = {
  colors: {
    gradients: {
      blue1: colors.gradients.blue1,
      blue2: colors.gradients.blue2,
      blue3: colors.gradients.blue3,
      blue4: colors.gradients.blue4,
      blue5: colors.gradients.blue5,
      orange1: colors.gradients.orange1,
      orange2: colors.gradients.orange2,
      orange3: colors.gradients.orange3,
      purple1: colors.gradients.purple1,
      purple3: colors.gradients.purple3,
      pink1: colors.gradients.pink1,
      pink2: colors.gradients.pink2,
      green1: colors.gradients.green1,
      green2: colors.gradients.green2,
      black1: colors.gradients.black1,
      black2: colors.gradients.black2,
    },
    shadows: {
      success: colors.shadows.success,
      error: colors.shadows.error,
      primary: colors.shadows.primary,
      info: colors.shadows.info,
      warning: colors.shadows.warning,
    },
    alpha: {
      white: {
        5: alpha(themeColors.white, 0.02),
        10: alpha(themeColors.white, 0.1),
        30: alpha(themeColors.white, 0.3),
        50: alpha(themeColors.white, 0.5),
        70: alpha(themeColors.white, 0.7),
        100: themeColors.white,
      },
      trueWhite: {
        5: alpha(themeColors.white, 0.02),
        10: alpha(themeColors.white, 0.1),
        30: alpha(themeColors.white, 0.3),
        50: alpha(themeColors.white, 0.5),
        70: alpha(themeColors.white, 0.7),
        100: themeColors.white,
      },
      black: {
        5: alpha(themeColors.black, 0.02),
        10: alpha(themeColors.black, 0.1),
        30: alpha(themeColors.black, 0.3),
        50: alpha(themeColors.black, 0.5),
        70: alpha(themeColors.black, 0.7),
        100: themeColors.black,
      },
    },
    // mode: theme?.customization?.navType,
    common: {
      black: themeOption.colors?.darkPaper,
    },
    secondary: {
      lighter: themeOption.colors?.secondaryLight,
      light: themeOption.colors?.secondaryLight,
      main: themeOption.colors?.secondaryMain,
      dark: themeOption.colors?.secondaryDark,
      200: themeOption.colors?.secondary200,
      800: themeOption.colors?.secondary800,
    },
    primary: {
      lighter: themeOption.colors?.primaryLight,
      light: themeOption.colors?.primaryLight,
      main: themeOption.colors?.primaryMain,
      dark: themeOption.colors?.primaryDark,
      200: themeOption.colors?.primary200,
      800: themeOption.colors?.primary800,
    },
    success: {
      lighter: themeOption.colors?.successLight,
      light: themeOption.colors?.successLight,
      200: themeOption.colors?.success200,
      main: themeOption.colors?.successMain,
      dark: themeOption.colors?.successDark,
    },
    orange: {
      light: themeOption.colors?.orangeLight,
      main: themeOption.colors?.orangeMain,
      dark: themeOption.colors?.orangeDark,
    },
    warning: {
      lighter: themeOption.colors?.warningLight,
      light: themeOption.colors?.warningLight,
      main: themeOption.colors?.warningMain,
      dark: themeOption.colors?.warningDark,
    },
    error: {
      lighter: themeOption.colors?.errorLight,
      light: themeOption.colors?.errorLight,
      main: themeOption.colors?.errorMain,
      dark: themeOption.colors?.errorDark,
    },
    info: {
      lighter: alpha(themeColors.info, 0.1),
      light: lighten(themeColors.info, 0.3),
      main: themeColors.info,
      dark: darken(themeColors.info, 0.2),
    },
  },
  general: {
    reactFrameworkColor: '#00D8FF',
    borderRadiusSm: '6px',
    borderRadius: '10px',
    borderRadiusLg: '12px',
    borderRadiusXl: '16px',
  },
  sidebar: {
    background: colors.layout.sidebar.background,
    textColor: colors.layout.sidebar.textColor,
    dividerBg: colors.layout.sidebar.dividerBg,
    menuItemColor: colors.layout.sidebar.menuItemColor,
    menuItemColorActive: colors.layout.sidebar.menuItemColorActive,
    menuItemBg: colors.layout.sidebar.menuItemBg,
    menuItemBgActive: colors.layout.sidebar.menuItemBgActive,
    menuItemIconColor: colors.layout.sidebar.menuItemIconColor,
    menuItemIconColorActive: colors.layout.sidebar.menuItemIconColorActive,
    menuItemHeadingColor: colors.layout.sidebar.menuItemHeadingColor,
    boxShadow: '2px 0 3px rgba(159, 162, 191, .18), 1px 0 1px rgba(159, 162, 191, 0.32)',
    width: '290px',
  },
  header: {
    height: '180px',
    background: colors.alpha.black[100],
    boxShadow: colors.shadows.cardSm,
    textColor: colors.secondary.main,
  },
  spacing: 9,
  palette: {
    common: {
      black: colors.alpha.black[100],
      white: colors.alpha.white[100],
    },
    mode: 'light',
    primary: {
      light: colors.primary.light,
      main: colors.primary.main,
      dark: colors.primary.dark,
    },
    secondary: {
      light: colors.secondary.light,
      main: colors.secondary.main,
      dark: colors.secondary.dark,
    },
    error: {
      light: colors.error.light,
      main: colors.error.main,
      dark: colors.error.dark,
      contrastText: colors.alpha.white[100],
    },
    success: {
      light: colors.success.light,
      main: colors.success.main,
      dark: colors.success.dark,
      contrastText: colors.alpha.white[100],
    },
    info: {
      light: colors.info.light,
      main: colors.info.main,
      dark: colors.info.dark,
      contrastText: colors.alpha.white[100],
    },
    warning: {
      light: colors.warning.light,
      main: colors.warning.main,
      dark: colors.warning.dark,
      contrastText: colors.alpha.white[100],
    },

    orange: {
      light: themeOption.colors?.orangeLight,
      main: themeOption.colors?.orangeMain,
      dark: themeOption.colors?.orangeDark,
    },
    grey: {
      50: themeOption.colors?.grey50,
      100: themeOption.colors?.grey100,
      500: themeOption.darkTextSecondary,
      600: themeOption.heading,
      700: themeOption.darkTextPrimary,
      900: themeOption.textDark,
      1000: themeOption.textDark,
    },
    dark: {
      light: themeOption.colors?.darkTextPrimary,
      main: themeOption.colors?.darkLevel1,
      dark: themeOption.colors?.darkLevel2,
      800: themeOption.colors?.darkBackground,
      900: themeOption.colors?.darkPaper,
    },
    text: {
      primary: themeOption.darkTextPrimary,
      secondary: themeOption.darkTextSecondary,
      dark: themeOption.textDark,
      hint: themeOption.colors?.grey100,
    },
    background: {
      paper: themeOption.paper,
      default: themeOption.backgroundDefault,
    },
    action: {
      active: colors.alpha.black[100],
      hover: colors.primary.light,
      hoverOpacity: 0.1,
      selected: colors.alpha.black[10],
      selectedOpacity: 0.1,
      disabled: colors.alpha.black[50],
      disabledBackground: colors.alpha.black[5],
      disabledOpacity: 0.38,
      focus: colors.alpha.black[10],
      focusOpacity: 0.05,
      activatedOpacity: 0.12,
    },
    tonalOffset: 0.5,
  },
  breakpoints: {
    values: {
      xs: 0,
      sm: 600,
      md: 960,
      lg: 1280,
      xl: 1840,
    },
  },
};
// }
